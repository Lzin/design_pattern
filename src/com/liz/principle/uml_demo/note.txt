类和类之间的关系:
    1.依赖: 如果在类中用到了另一个类；则两个类之间存在了依赖（dependence）关系 （虚线）- - - - - - - - -→
        如何界定一个类使用另外一个类？
            * 可以是类的成员属性
            * 也可以是类的返回类型
            * 也可以是类的方法接收的参数类型
            * 方法中使用到

    2.泛化: 泛化关系实际上就是继承（generalization）关系，是依赖关系的特例 （实线）--------------------------△
        泛化关系实际上就是继承关系，他是依赖关系的特例

    3.实现: 实现关系（implementation）实际上就是一个类实现另一个。是依赖关系的特例 （虚线）- - - - - - - - -△
        实现关系多体现在类和接口的关系上 一个类"实现"另一个接口

    4.关联: 关联关系（Association）实际上是类和类之间的联系，是依赖关系的特例 （实线）-----------------
        1. 关联关系具有“导向性”,即双向关系或者单向关系
        2. 关联关系具有多重性
            "1"(表示有且仅有一个）
            "0..."（表示0个或者多个）
            "0,1"(表示有0个或者1个)
            "n...m"(表示n到m个)
            "m..."（表示至少m个）

    5.聚合: 聚合关系（Aggregation）表示的是整体和部分的关系，整体和部分可以分开 （实线）-----------------◇
        1. 如一台电脑由鼠标 键盘 显示器组成，组成电脑的各个配件可以从电脑上分离出来。使用带空心菱形的实线表示
        2. 聚合关系是关联关系的特例
        3.setXxx

    6.组合: 组合关系（Composition）
        1. 表示的是整体和部分的关系，但是整体和部分不能分开 （实线）--------------------(实心菱形)
        2. 如大脑 各个器官和人体的关系【整体和部分不能分开】
        3. 组合关系是关联关系的特例
        4. 在类A中 出现完整的new B的实例（B b = new B()），则称A 和 B为组合关系


