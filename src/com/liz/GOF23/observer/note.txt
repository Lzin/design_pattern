观察者模式:
1.需求: 天气预报项目需求
    1.气象站天天将测量到的温度，湿度，气压等等以公告的形式发布出去(比如发布到自己的网站或者第三方)
    2.需要设计开放型API,便于第三方也可以接入气象站获取数据
    3.提供温度，气压接口
    4.测量温度进行更新时候，要实时通知第三方

2.普通方案
    问题分析: 1.其他第三方数据接入气象站时需要编写重复代码（接入第三方的时候，需要创建一个动态的CurrentConditions 加入到dataChange中 不利于维护）
             2.无法动态添加第三方
             3.违反了ocp原则
    因此，使用观察者模式

3.观察者模式的简单介绍
    1.观察者模式实现对象之间一对多的设计方案，被依赖的对象是Subject,依赖的对象是Observer，Subject通知Observer变化
    2.观察者模式设计后，会以集合的方式管理用户（Observer）,包括注册，移除和通知（调用observer的方法）
    3.增加观察者十分轻松，无需修改大量代码
    4.观察者模式的角色:
          1.Subject:用来登记注册，移除和通知
              * registerObserver 注册观察者
              * removeObserver   移除观察者
              * notifyObservers  通知所有的注册观察者，根据不同需求，可以是更新数据，让用户来取。或者是实施推送，看具体的需求。
          2.Observer 第三方网站/用户

4.Observable











