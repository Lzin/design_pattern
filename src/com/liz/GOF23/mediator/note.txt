中介者模式:
1.项目需求:
    1.智能家庭中包括各种设备，闹钟，咖啡机，电视机，窗帘等
    2.主人要起床，各个设备可以协同工作，自动完成看电视的准备工作，假设流程为: 闹钟响起 => 咖啡机开始做咖啡 => 窗帘自动落下 => 电视机开始播放
    3.通过中介者的介入，减少各个系统之间的耦合（如果子系统之间相互调用 就变成外观模式的思想了）

2.中介者模式简介;
    1.中介者模式(Mediator Pattern)，用一个中介对象来封装一系列的对象交互。中介者使得各个对象不需要显式地相互调用，从而使其耦合松散，而且可以独立地改变它们之间的交互
    2.中介者模式属于行为型模式，使得代码易于维护
    3.在MVC模式中，C（controller）是M（model模型）和V(View视图)的中介者，在前后盾交互的时候起到了中间人的作用
    4.中介者模式的角色和职责
        1.Mediator: 抽象中介者，定义了同事对象到中介者对象的接口
        2.Colleague:抽象同事类,
        3.ConcreteMediator:具体的中介者对象，实现抽象方法,他需要知道所有的具体的同事类，即以一个集合来管理同事类（HashMap），并接受某个同事对象的消息，完成相应的任务（同事的消息放在中介中处理）
        4.ConcreteColleague:具体的同事类，会有很多。每个同事只知道自己的行为，而不了解其他同事类的行为。但是它们都依赖中介者对象

3.中介者模式不允许子类之间产生耦合，将子类的耦合放到中介者模式中，做到“统一耦合”

4.中介者模式的细节:
    1.多个类之间相互耦合，会形成网状结构，使用中介者模式将网状结构变成"星型结构"，进行解耦
    2.减少类之间的依赖，降低了耦合，符合迪米特原则
    3.中介者承担了较多的责任，如果中介者出现问题，整个系统就会出现问题
    4.如果设计不当，中介者会变得过于复杂。




