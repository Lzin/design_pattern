建造者设计模式
(工厂是创建一批对象，建造者是创建一个对象的流程)
    1.需求: 盖房子
        1. 需要建房子: 这一过程为打桩，砌墙，封顶
        2. 房子有各种各样的，比如说平房，楼房，别墅等等，建房子过程一样，但是具体的操作方式不同

    2.基本介绍:
        1.建造者模式(Builder Pattern)又叫生成器模式，是一种创建性模式。它可以将复杂对象的建造过程进行抽象（抽象类别）,使得这个抽象过程的不同实现方法构建出不同表现（属性）的对象
        2.建造者模式允许用户只通过指定复杂对象的 "类型" 和 "内容" 就可以构建它们，用户不需要知道内部的具体构建细节[具体细节被封装]

    3.建造者模式的四个角色:
        1.Product(产品角色) : 一个具体的产品对象
        2.Builder(抽象建造者) : 创建一个Product对象的各个部件指定的接口/抽象类 【只需要指定建造的流程，但是具体细节不管】
        3.ConcreteBuilder(具体建造者) : 实现接口，构建装配各个部件 【具体建造细节】
        4.Director(指挥者): 构建一个使用builder接口的对象。主要用于创建一个复杂的对象。[实际操作]
            主要有两个作用:
                1.隔离了客户和对象的生产过程
                2.负责控制产品对象的生产过程